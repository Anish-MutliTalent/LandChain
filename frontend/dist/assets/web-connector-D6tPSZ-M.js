const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/eth_getTransactionCount-BK45tGIb.js","assets/index-DPe3i_VP.js","assets/index-BkWRKyNb.css"])))=>i.map(i=>d[i]);
import{g as u,a as h,s as w,C as P,b,p as _,c as q,d as v,e as T,t as D,f as L,_ as F,i as Q,h as I,w as A,I as G,j as O,k as V}from"./index-DPe3i_VP.js";import{a as H}from"./types-DlKe2M91.js";import{r as J}from"./random-BkU3W84C.js";import{e as U}from"./eth_sendRawTransaction-DPdnXbFR.js";const N=n=>{if(!H.includes(n))throw new Error(`Unknown auth option ${n}`);switch(n){case"wallet":return"siwe";default:return n}},y=({authOption:n,client:e,ecosystem:t,mode:i="popup",redirectUrl:r})=>{if(i==="popup"&&r)throw new Error("Redirect URL is not supported for popup mode");if(i==="window"&&!r)throw new Error("Redirect URL is required for window mode");const o=N(n);let a=`${u("inAppWallet")}/api/2024-05-05/login/${o}?clientId=${e.clientId}`;if(t!=null&&t.partnerId?a=`${a}&ecosystemId=${t.id}&ecosystemPartnerId=${t.partnerId}`:t&&(a=`${a}&ecosystemId=${t.id}`),i!=="popup"){const s=new URL(r||window.location.href);s.searchParams.set("walletId",(t==null?void 0:t.id)||"inApp"),s.searchParams.set("authProvider",n),a=`${a}&redirectUrl=${encodeURIComponent(s.toString())}`}return a},W=({authOption:n,client:e,ecosystem:t})=>{const i=N(n);let r=`${u("inAppWallet")}/api/2024-05-05/login/${i}/callback?clientId=${e.clientId}`;return t!=null&&t.partnerId?r=`${r}&ecosystemId=${t.id}&ecosystemPartnerId=${t.partnerId}`:t&&(r=`${r}&ecosystemId=${t.id}`),r},Y="width=350, height=500",C=({isWindowOpenedByFn:n,win:e,closeOpenedWindow:t})=>{n?e==null||e.close():e&&t?t(e):e&&e.close()};async function Z(n){const e=y({...n,mode:n.mode||"redirect"});n.mode==="redirect"?window.location.href=e:window.open(e),await new Promise(t=>setTimeout(t,5e3))}const K=async n=>{let e=n.openedWindow,t=!1;if(e||(e=window.open(y({...n,mode:"popup"}),`Login to ${n.authOption}`,Y),t=!0),!e)throw new Error("Something went wrong opening pop-up");return await new Promise((r,o)=>{const a=window.setInterval(async()=>{e.closed&&(clearInterval(a),window.removeEventListener("message",s),o(new Error("User closed login window")))},1e3),s=async l=>{if(l.origin===u("inAppWallet")){if(typeof l.data!="object"){o(new Error("Invalid event data"));return}switch(l.data.eventType){case"oauthSuccessResult":{window.removeEventListener("message",s),clearInterval(a),C({isWindowOpenedByFn:t,win:e,closeOpenedWindow:n.closeOpenedWindow}),l.data.authResult&&r(l.data.authResult);break}case"oauthFailureResult":{window.removeEventListener("message",s),clearInterval(a),C({isWindowOpenedByFn:t,win:e,closeOpenedWindow:n.closeOpenedWindow}),o(new Error(l.data.errorString));break}}}};window.addEventListener("message",s)})};async function E({authToken:n,client:e,ecosystem:t}){const r=await h(e,t)(`${u("inAppWallet")}/api/2024-05-05/accounts`,{method:"GET",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${n}`}});if(!r.ok){if(r.status===401)return;const o=await r.json();throw new Error(`Failed to get user status: ${o.message}`)}return await r.json()}const X=u("inAppWallet"),ee=`${X}/`,B=`${ee}api/2023-10-20`,te=`${B}/embedded-wallet/validate-custom-jwt`,ne=`${B}/embedded-wallet/validate-custom-auth-endpoint`,R=(n,e)=>e instanceof Error?`${n}: ${e.message}`:`${n}: ${w(e)}`;async function ie(n){const t=await h(n.client,n.ecosystem)(ne,{method:"POST",headers:{"Content-Type":"application/json"},body:w({payload:n.payload,developerClientId:n.client.clientId})});if(!t.ok){const i=await t.json();throw new Error(`Custom auth endpoint authentication error: ${i.message}`)}try{const{verifiedToken:i}=await t.json();return{storedToken:i}}catch(i){throw new Error(R("Malformed response from post auth_endpoint authentication",i))}}async function ae(n){const e=h(n.client,n.ecosystem),t=y({authOption:"backend",client:n.client,ecosystem:n.ecosystem}),i=await e(`${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({walletSecret:n.walletSecret})});if(!i.ok)throw new Error("Failed to generate backend account");return await i.json()}async function re(n){const e=new P({storage:n.storage,clientId:n.client.clientId,ecosystem:n.ecosystem});let t=await e.getGuestSessionId();t||(t=J(32),e.saveGuestSessionId(t));const i=h(n.client,n.ecosystem),r=W({authOption:"guest",client:n.client,ecosystem:n.ecosystem}),o=await i(`${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({sessionId:t})});if(!o.ok)throw new Error("Failed to generate guest account");return await o.json()}async function se(n){const t=await h(n.client,n.ecosystem)(te,{method:"POST",headers:{"Content-Type":"application/json"},body:w({jwt:n.jwt,developerClientId:n.client.clientId})});if(!t.ok){const i=await t.json();throw new Error(`JWT authentication error: ${i.message}`)}try{const{verifiedToken:i}=await t.json();return{storedToken:i}}catch(i){throw new Error(R("Malformed response from post jwt authentication",i))}}async function oe({client:n,ecosystem:e,tokenToLink:t,storage:i}){const r=h(n,e),o=u("inAppWallet"),a=await i.getAuthCookie();if(!a)throw new Error("Failed to link account, no user logged in");const s={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},l=await r(`${o}/api/2024-05-05/account/connect`,{method:"POST",headers:s,body:w({accountAuthTokenToConnect:t})});if(!l.ok){const d=await l.json();throw new Error(d.message||"Failed to link account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function ce({client:n,ecosystem:e,profileToUnlink:t,storage:i}){const r=h(n,e),o=u("inAppWallet"),a=await i.getAuthCookie();if(!a)throw new Error("Failed to unlink account, no user logged in");const s={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},l=await r(`${o}/api/2024-05-05/account/disconnect`,{method:"POST",headers:s,body:w(t)});if(!l.ok){const d=await l.json();throw new Error(d.message||"Failed to unlink account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function le({client:n,ecosystem:e,storage:t}){const i=h(n,e),r=u("inAppWallet"),o=await t.getAuthCookie();if(!o)throw new Error("Failed to get linked accounts, no user logged in");const a={Authorization:`Bearer iaw-auth-token:${o}`,"Content-Type":"application/json"},s=await i(`${r}/api/2024-05-05/accounts`,{method:"GET",headers:a});if(!s.ok){const c=await s.json();throw new Error(c.message||"Failed to get linked accounts.")}const{linkedAccounts:l}=await s.json();return l??[]}function M(){return`${u("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function z(n,e){return`${u("inAppWallet")}/api/2024-05-05/login/passkey?type=${n}${e?`&username=${e}`:""}`}async function de(n){var d,p,g;if(!n.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=h(n.client,n.ecosystem),t=n.username??he(n.ecosystem),r=await(await e(z("sign-up",t))).json();if(!r.challenge)throw new Error("No challenge received");const o=r.challenge,a=await n.passkeyClient.register({name:t,challenge:o,rp:n.rp}),s={};(d=n.ecosystem)!=null&&d.partnerId&&(s["x-ecosystem-partner-id"]=n.ecosystem.partnerId),(p=n.ecosystem)!=null&&p.id&&(s["x-ecosystem-id"]=n.ecosystem.id);const c=await(await e(M(),{method:"POST",headers:{"Content-Type":"application/json",...s},body:w({type:"sign-up",authenticatorData:a.authenticatorData,credentialId:a.credentialId,serverVerificationId:r.serverVerificationId,clientData:a.clientData,username:t,credential:{publicKey:a.credential.publicKey,algorithm:a.credential.algorithm},origin:a.origin,rpId:n.rp.id})})).json();if(!c||!c.storedToken)throw new Error(`Error verifying passkey: ${c.message??"unknown error"}`);return await((g=n.storage)==null?void 0:g.savePasskeyCredentialId(a.credentialId)),c}async function ue(n){var c,d,p,g;if(!n.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=h(n.client,n.ecosystem),[t,i]=await Promise.all([e(z("sign-in")).then(f=>f.json()),(c=n.storage)==null?void 0:c.getPasskeyCredentialId()]);if(!t.challenge)throw new Error("No challenge received");const r=t.challenge,o=await n.passkeyClient.authenticate({credentialId:i??void 0,challenge:r,rp:n.rp}),a={};(d=n.ecosystem)!=null&&d.partnerId&&(a["x-ecosystem-partner-id"]=n.ecosystem.partnerId),(p=n.ecosystem)!=null&&p.id&&(a["x-ecosystem-id"]=n.ecosystem.id);const l=await(await e(M(),{method:"POST",headers:{"Content-Type":"application/json",...a},body:w({type:"sign-in",authenticatorData:o.authenticatorData,credentialId:o.credentialId,serverVerificationId:t.serverVerificationId,clientData:o.clientData,signature:o.signature,origin:o.origin,rpId:n.rp.id})})).json();if(!l||!l.storedToken)throw new Error(`Error verifying passkey: ${l.message??"unknown error"}`);return await((g=n.storage)==null?void 0:g.savePasskeyCredentialId(o.credentialId)),l}function he(n){return`${(n==null?void 0:n.id)??"wallet"}-${new Date().toISOString()}`}function we(n){let i=[`${n.domain} wants you to sign in with your Ethereum account:`,n.address].join(`
`);i=[i,n.statement].join(`

`),n.statement&&(i+=`
`);const r=[];if(n.uri){const d=`URI: ${n.uri}`;r.push(d)}const o=`Version: ${n.version}`;if(r.push(o),n.chain_id){const d=`Chain ID: ${n.chain_id}`||"1";r.push(d)}const a=`Nonce: ${n.nonce}`;r.push(a);const s=`Issued At: ${n.issued_at}`;r.push(s);const l=`Expiration Time: ${n.expiration_time}`;if(r.push(l),n.invalid_before){const d=`Not Before: ${n.invalid_before}`;r.push(d)}n.resources&&r.push(["Resources:",...n.resources.map(d=>`- ${d}`)].join(`
`));const c=r.join(`
`);return[i,c].join(`
`)}async function pe(n){const{payload:e,account:t}=n;return{signature:await t.signMessage({message:we(e)}),payload:e}}async function ge(n){const{wallet:e,chain:t,client:i,ecosystem:r}=n,o=e.getAccount()||await e.connect({client:i,chain:t}),a=h(i,r),s=await(async()=>{const d=y({authOption:"wallet",client:n.client,ecosystem:n.ecosystem}),p=await a(`${d}&address=${o.address}&chainId=${t.id}`);if(!p.ok)throw new Error("Failed to generate SIWE login payload");return await p.json()})(),{signature:l}=await pe({payload:s,account:o});return await(async()=>{const d=W({authOption:"wallet",client:n.client,ecosystem:n.ecosystem}),p=await a(`${d}&signature=${l}&payload=${encodeURIComponent(s)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({signature:l,payload:s})});if(!p.ok)throw new Error("Failed to verify SIWE signature");return await p.json()})()}async function me({client:n,payload:{message:e,isRaw:t,originalMessage:i,chainId:r},storage:o}){const a=await o.getAuthCookie(),s=o.ecosystem,l=h(n,s);if(!a)throw new Error("No auth token found when signing message");const c=await l(`${u("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${a}`},body:w({messagePayload:{message:e,isRaw:t,originalMessage:i,chainId:r}})});if(!c.ok)throw new Error(`Failed to sign message - ${c.status} ${c.statusText}`);return await c.json()}async function fe({client:n,payload:e,storage:t}){const i=await t.getAuthCookie(),r=t.ecosystem,o=h(n,r);if(!i)throw new Error("No auth token found when signing transaction");const a=await o(`${u("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${i}`},body:w({transactionPayload:e})});if(!a.ok)throw new Error(`Failed to sign transaction - ${a.status} ${a.statusText}`);return(await a.json()).signature}async function ye({client:n,payload:e,storage:t}){const i=await t.getAuthCookie(),r=t.ecosystem,o=h(n,r);if(!i)throw new Error("No auth token found when signing typed data");const a=await o(`${u("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${i}`},body:w({...e})});if(!a.ok)throw new Error(`Failed to sign typed data - ${a.status} ${a.statusText}`);return await a.json()}class be{constructor({client:e,ecosystem:t,address:i,storage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.address=i,this.localStorage=r}async postWalletSetUp(e){await this.localStorage.saveAuthCookie(e.storedToken.cookieString)}async getUserWalletStatus(){var o,a;const e=await this.localStorage.getAuthCookie();if(!e)return{status:"Logged Out"};const t=await E({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!t)return{status:"Logged Out"};const i=t.wallets[0],r={email:(o=t.linkedAccounts.find(s=>s.details.email!==void 0))==null?void 0:o.details.email,phoneNumber:(a=t.linkedAccounts.find(s=>s.details.phone!==void 0))==null?void 0:a.details.phone,userWalletId:t.id||"",recoveryShareManagement:"ENCLAVE"};return i?{status:"Logged In, Wallet Initialized",walletAddress:i.address,authDetails:r,account:await this.getAccount()}:{status:"Logged In, Wallet Uninitialized",authDetails:r}}async getAccount(){const e=this.client,t=this.localStorage,i=this.address,r=this.ecosystem,o=async a=>{const s=v({client:e,chain:T(a.chainId)}),l={to:a.to?b(a.to):void 0,data:a.data,value:m(a.value),gas:m(a.gas),nonce:m(a.nonce)||L(await F(async()=>{const{eth_getTransactionCount:c}=await import("./eth_getTransactionCount-BK45tGIb.js");return{eth_getTransactionCount:c}},__vite__mapDeps([0,1,2])).then(({eth_getTransactionCount:c})=>c(s,{address:b(this.address),blockTag:"pending"}))),chainId:L(a.chainId)};return m(a.maxFeePerGas)?(l.maxFeePerGas=m(a.maxFeePerGas),l.maxPriorityFeePerGas=m(a.maxPriorityFeePerGas),l.type=2):(l.gasPrice=m(a.gasPrice),l.type=0),fe({client:e,storage:t,payload:l})};return{address:b(i),async signTransaction(a){if(!a.chainId)throw new Error("chainId required in tx to sign");return o({chainId:a.chainId,...a})},async sendTransaction(a){const s=v({client:e,chain:T(a.chainId)}),l=await o(a),c=await U(s,l);return D({client:e,ecosystem:r,chainId:a.chainId,walletAddress:i,walletType:"inApp",transactionHash:c,contractAddress:a.to??void 0,gasPrice:a.gasPrice}),{transactionHash:c}},async signMessage({message:a,originalMessage:s,chainId:l}){const c=typeof a=="string"?{message:a,isRaw:!1,originalMessage:s,chainId:l}:{message:typeof a.raw=="string"?a.raw:q(a.raw),isRaw:!0,originalMessage:s,chainId:l},{signature:d}=await me({client:e,payload:c,storage:t});return d},async signTypedData(a){const s=_(a),{signature:l}=await ye({client:e,payload:s,storage:t});return l}}}}function m(n){return n===void 0||Q(n)?n:L(n)}const Ie={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none",pointerEvents:"all"},k=new Map;class ke{constructor({link:e,baseUrl:t,iframeId:i,container:r,onIframeInitialize:o,localStorage:a,clientId:s,ecosystem:l}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=a,this.clientId=s,this.ecosystem=l,this.iframeBaseUrl=t,typeof document>"u")return;r=r??document.body;let c=document.getElementById(i);const d=new URL(e);if(!c||c.src!==d.href){c=document.createElement("iframe");const p={...Ie};Object.assign(c.style,p),c.setAttribute("id",i),c.setAttribute("fetchpriority","high"),r.appendChild(c),c.src=d.href;const g=f=>{if(f.data.eventType==="ewsIframeLoaded"){if(window.removeEventListener("message",g),!c){console.warn("thirdweb iFrame not found");return}this.onIframeLoadHandler(c,o)()}};window.addEventListener("message",g)}this.iframe=c}async onIframeLoadedInitVariables(){var e,t;return{authCookie:await this.localStorage.getAuthCookie(),deviceShareStored:await this.localStorage.getDeviceShare(),walletUserId:await this.localStorage.getWalletUserId(),clientId:this.clientId,partnerId:(e=this.ecosystem)==null?void 0:e.partnerId,ecosystemId:(t=this.ecosystem)==null?void 0:t.id}}onIframeLoadHandler(e,t){return async()=>{var o;const i=new MessageChannel,r=new Promise((a,s)=>{i.port1.onmessage=l=>{const{data:c}=l;i.port1.close(),c.success||s(new Error(c.error)),k.set(e.src,!0),t&&t(),a(!0)}});(o=e==null?void 0:e.contentWindow)==null||o.postMessage({eventType:"initIframe",data:await this.onIframeLoadedInitVariables()},this.iframeBaseUrl,[i.port2]),await r}}async call({procedureName:e,params:t,showIframe:i=!1}){var a;if(!this.iframe)throw new Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!k.get(this.iframe.src);)await I(this.POLLING_INTERVAL_SECONDS*1e3);i&&(this.iframe.style.display="block",await I(.005*1e3));const r=new MessageChannel,o=new Promise((s,l)=>{r.port1.onmessage=async c=>{const{data:d}=c;r.port1.close(),i&&(await I(.1*1e3),this.iframe&&(this.iframe.style.display="none")),d.success?s(d.data):l(new Error(d.error))}});return(a=this.iframe.contentWindow)==null||a.postMessage({eventType:e,data:{...t,...await this.onIframeLoadedInitVariables()}},this.iframeBaseUrl,[r.port2]),o}destroy(){this.iframe&&k.delete(this.iframe.src)}}class ve extends ke{constructor({clientId:e,baseUrl:t,ecosystem:i}){super({iframeId:Le+((i==null?void 0:i.id)||""),link:Te({clientId:e,path:G,ecosystem:i,baseUrl:t}).href,baseUrl:t,container:typeof document>"u"?void 0:document.body,localStorage:new P({storage:A,clientId:e,ecosystem:i}),clientId:e,ecosystem:i}),this.clientId=e,this.ecosystem=i}}function Te({clientId:n,baseUrl:e,path:t,ecosystem:i,queryParams:r}){var a;const o=new URL(`${t}`,e);if(r)for(const s of Object.keys(r))o.searchParams.set(s,((a=r[s])==null?void 0:a.toString())||"");return o.searchParams.set("clientId",n),(i==null?void 0:i.partnerId)!==void 0&&o.searchParams.set("partnerId",i.partnerId),(i==null?void 0:i.id)!==void 0&&o.searchParams.set("ecosystemId",i.id),o}const Le="thirdweb-in-app-wallet-iframe";async function Ae({client:n,ecosystem:e,authToken:t}){const r=await h(n,e)(`${u("inAppWallet")}/api/v1/enclave-wallet/generate`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${t}`}});if(!r.ok)throw new Error(`Failed to generate wallet - ${r.status} ${r.statusText}`);const{wallet:o}=await r.json();return o}class Pe{constructor({baseUrl:e,querier:t,preLogin:i,postLogin:r,client:o,ecosystem:a}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=e,this.LoginQuerier=t,this.preLogin=i,this.postLogin=r,this.client=o,this.ecosystem=a}async sendEmailLoginOtp({email:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebEmailLoginOtp",params:{email:e}})}async sendSmsLoginOtp({phoneNumber:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebSmsLoginOtp",params:{phoneNumber:e}})}}class We extends Pe{async authenticateWithModal(){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:void 0,showIframe:!0})}async loginWithModal(){await this.preLogin();const e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe({email:e}){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:{email:e},showIframe:!0})}async loginWithIframe({email:e}){await this.preLogin();const t=await this.authenticateWithIframe({email:e});return this.postLogin(t)}async authenticateWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({procedureName:"loginWithCustomJwt",params:{encryptionKey:e,jwt:t}})}async loginWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");await this.preLogin();const i=await this.authenticateWithCustomJwt({encryptionKey:e,jwt:t});return this.postLogin(i)}async authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t}){return this.LoginQuerier.call({procedureName:"loginWithCustomAuthEndpoint",params:{encryptionKey:e,payload:t}})}async loginWithCustomAuthEndpoint({encryptionKey:e,payload:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom auth");await this.preLogin();const i=await this.authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t});return this.postLogin(i)}async authenticateWithEmailOtp({email:e,otp:t,recoveryCode:i}){return this.LoginQuerier.call({procedureName:"verifyThirdwebEmailLoginOtp",params:{email:e,otp:t,recoveryCode:i}})}async loginWithEmailOtp({email:e,otp:t,recoveryCode:i}){const r=await this.authenticateWithEmailOtp({email:e,otp:t,recoveryCode:i});return this.postLogin(r)}async authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:i}){return this.LoginQuerier.call({procedureName:"verifyThirdwebSmsLoginOtp",params:{phoneNumber:e,otp:t,recoveryCode:i}})}async loginWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:i}){const r=await this.authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:i});return this.postLogin(r)}}class Ee{constructor({client:e,querier:t,onAuthSuccess:i,ecosystem:r,baseUrl:o,localStorage:a}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=r,this.AuthQuerier=t,this.localStorage=a,this.onAuthSuccess=i,this.BaseLogin=new We({postLogin:async s=>this.postLogin(s),preLogin:async()=>{await this.preLogin()},ecosystem:r,querier:t,client:e,baseUrl:o})}async preLogin(){await this.logout()}async postLogin({storedToken:e,walletDetails:t}){return e.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(e.cookieString),await this.onAuthSuccess({storedToken:e,walletDetails:t})}async loginWithAuthToken(e,t){var o;e.storedToken.authProvider!=="Backend"&&await this.preLogin();const i=await E({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!i)throw new Error("Cannot login, no user found for auth token");if(i.wallets.length>0&&((o=i.wallets[0])==null?void 0:o.type)==="enclave")return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:i.wallets[0].address}});if(i.wallets.length===0){const a=await Ae({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.address}})}const r=await this.AuthQuerier.call({procedureName:"loginWithStoredTokenDetails",params:{storedToken:e.storedToken,recoveryCode:t}});return this.postLogin(r)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp({email:e}){return this.BaseLogin.sendEmailLoginOtp({email:e})}async sendSmsLoginOtp({phoneNumber:e}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:e})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){const e=await this.localStorage.removeAuthCookie(),t=await this.localStorage.removeWalletUserId();return{success:e||t}}}const Se=async n=>{const{client:e,ecosystem:t}=n,i=y({client:e,ecosystem:t,authOption:n.strategy}),r={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(r["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(r["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(n.strategy){case"email":return{email:n.email};case"phone":return{phone:n.phoneNumber}}})(),a=await fetch(i,{method:"POST",headers:r,body:w(o)});if(!a.ok)throw new Error("Failed to send verification code");return await a.json()},j=async n=>{const{client:e,ecosystem:t}=n,i=W({authOption:n.strategy,client:n.client,ecosystem:n.ecosystem}),r={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(r["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(r["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(n.strategy){case"email":return{email:n.email,code:n.verificationCode};case"phone":return{phone:n.phoneNumber,code:n.verificationCode}}})(),a=await fetch(i,{method:"POST",headers:r,body:w(o)});if(!a.ok)throw new Error("Failed to verify verification code");return await a.json()};class ${constructor({client:e,ecosystem:t,querier:i,localStorage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.walletManagerQuerier=i,this.localStorage=r}async postWalletSetUp(e){e.deviceShareStored&&await this.localStorage.saveDeviceShare(e.deviceShareStored,e.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){const e=await this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return e.status==="Logged In, Wallet Initialized"?{status:"Logged In, Wallet Initialized",...e.user,account:await this.getAccount()}:e.status==="Logged In, New Device"?{status:"Logged In, New Device",...e.user}:e.status==="Logged In, Wallet Uninitialized"?{status:"Logged In, Wallet Uninitialized",...e.user}:{status:e.status}}async getAccount(){var a;const e=this.walletManagerQuerier,t=this.client,i=(a=this.ecosystem)==null?void 0:a.partnerId,{address:r}=await e.call({procedureName:"getAddress",params:void 0}),o=async s=>{const l={to:s.to??void 0,data:s.data,value:s.value,gasLimit:s.gas,nonce:s.nonce,chainId:s.chainId};s.maxFeePerGas?(l.accessList=s.accessList,l.maxFeePerGas=s.maxFeePerGas,l.maxPriorityFeePerGas=s.maxPriorityFeePerGas,l.type=2):(l.gasPrice=s.gasPrice,l.type=0);const c=O().rpc,{signedTransaction:d}=await e.call({procedureName:"signTransaction",params:{transaction:l,chainId:s.chainId,partnerId:i,rpcEndpoint:`https://${s.chainId}.${c}`}});return d};return{address:b(r),async signTransaction(s){if(!s.chainId)throw new Error("chainId required in tx to sign");return o({...s,chainId:s.chainId})},async sendTransaction(s){const l=v({client:t,chain:T(s.chainId)}),c=await o(s),d=await U(l,c);return D({client:t,chainId:s.chainId,walletAddress:r,walletType:"inApp",transactionHash:d,contractAddress:s.to??void 0,gasPrice:s.gasPrice}),{transactionHash:d}},async signMessage({message:s}){const l=typeof s=="string"?s:s.raw instanceof Uint8Array?s.raw:V(s.raw),{signedMessage:c}=await e.call({procedureName:"signMessage",params:{message:l,partnerId:i,chainId:1}});return c},async signTypedData(s){var S;const l=_(s);(S=l.types)!=null&&S.EIP712Domain&&(l.types.EIP712Domain=void 0);const c=l.domain,d=c==null?void 0:c.chainId,g={...c!=null&&c.verifyingContract?{verifyingContract:c==null?void 0:c.verifyingContract}:{},name:c==null?void 0:c.name,version:c==null?void 0:c.version};d&&(g.chainId=d);const f=O().rpc,{signedTypedData:x}=await e.call({procedureName:"signTypedDataV4",params:{domain:g,types:l.types,message:l.message,chainId:Number.parseInt(BigInt(d||1).toString()),partnerId:i,rpcEndpoint:`https://${d}.${f}`}});return x}}}}class De{isClientIdLegacyPaper(e){return e.indexOf("-")>0&&e.length===36}constructor({client:e,onAuthSuccess:t,ecosystem:i,passkeyDomain:r,storage:o}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(e.clientId))throw new Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");const a=u("inAppWallet");this.client=e,this.ecosystem=i,this.passkeyDomain=r,this.storage=new P({storage:o??A,clientId:e.clientId,ecosystem:i}),this.querier=new ve({clientId:e.clientId,ecosystem:i,baseUrl:a}),this.auth=new Ee({client:e,querier:this.querier,baseUrl:a,localStorage:this.storage,ecosystem:i,onAuthSuccess:async s=>{if(t==null||t(s),s.storedToken.authDetails.walletType==="sharded"&&(await this.querier.call({procedureName:"migrateFromShardToEnclave",params:{storedToken:s.storedToken}})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(s.storedToken.cookieString),!this.wallet)throw new Error("Failed to initialize wallet");const l="deviceShareStored"in s.walletDetails?s.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({storedToken:s.storedToken,deviceShareStored:l}),this.wallet instanceof $&&await this.querier.call({procedureName:"initIframe",params:{partnerId:i==null?void 0:i.partnerId,ecosystemId:i==null?void 0:i.id,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in s.walletDetails?s.walletDetails.deviceShareStored:null,walletUserId:s.storedToken.authDetails.userWalletId,authCookie:s.storedToken.cookieString}}),{user:{status:"Logged In, Wallet Initialized",authDetails:s.storedToken.authDetails,account:await this.wallet.getAccount(),walletAddress:s.walletDetails.walletAddress}}}})}async initializeWallet(e){var r;const t=await this.storage.getAuthCookie();if(!e&&t===null)throw new Error("No auth token provided and no stored auth token found to initialize the wallet");const i=await E({authToken:e||t,client:this.client,ecosystem:this.ecosystem});if(!i)throw new Error("Cannot initialize wallet, no user logged in");if(i.wallets.length===0)throw new Error("Cannot initialize wallet, this user does not have a wallet generated yet");return((r=i.wallets[0])==null?void 0:r.type)==="enclave"?new be({client:this.client,ecosystem:this.ecosystem,address:i.wallets[0].address,storage:this.storage}):new $({client:this.client,ecosystem:this.ecosystem,querier:this.querier,localStorage:this.storage})}async getUser(){if(!this.wallet){const e=await this.storage.getAuthCookie();if(!e)return{status:"Logged Out"};this.wallet=await this.initializeWallet(e)}if(!this.wallet)throw new Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw new Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return Se({...e,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(e,t,i){return Z({authOption:e,client:this.client,ecosystem:this.ecosystem,redirectUrl:i,mode:t})}async loginWithAuthToken(e,t){return this.auth.loginWithAuthToken(e,t)}async authenticate(e){const t=e.strategy;switch(t){case"email":return j({...e,client:this.client,ecosystem:this.ecosystem});case"phone":return j({...e,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return ie({payload:e.payload,client:this.client,ecosystem:this.ecosystem});case"jwt":return se({jwt:e.jwt,client:this.client,ecosystem:this.ecosystem});case"passkey":return this.passkeyAuth(e);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"steam":case"coinbase":case"discord":return K({authOption:t,client:this.client,ecosystem:this.ecosystem,closeOpenedWindow:e.closeOpenedWindow,openedWindow:e.openedWindow});case"guest":return re({client:this.client,ecosystem:this.ecosystem,storage:A});case"backend":return ae({client:this.client,walletSecret:e.walletSecret,ecosystem:this.ecosystem});case"wallet":return ge({ecosystem:this.ecosystem,client:this.client,wallet:e.wallet,chain:e.chain})}}async connect(e){const t=e.strategy;switch(t){case"auth_endpoint":case"jwt":{const i=await this.authenticate(e);return await this.loginWithAuthToken(i,e.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{const i=await this.passkeyAuth(e);return this.loginWithAuthToken(i)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{const i=await this.authenticate(e);return await this.auth.loginWithAuthToken(i)}default:Oe(t)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){const{PasskeyWebClient:t}=await F(async()=>{const{PasskeyWebClient:s}=await import("./passkeys-DClMPYVu.js");return{PasskeyWebClient:s}},[]),{passkeyName:i,storeLastUsedPasskey:r=!0}=e,o=new t,a=this.storage;return e.type==="sign-up"?de({client:this.client,ecosystem:this.ecosystem,username:i,passkeyClient:o,storage:r?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}}):ue({client:this.client,ecosystem:this.ecosystem,passkeyClient:o,storage:r?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}})}async linkProfile(e){const{storedToken:t}=await this.authenticate(e);return await oe({client:e.client,tokenToLink:t.cookieString,storage:this.storage,ecosystem:e.ecosystem||this.ecosystem})}async unlinkProfile(e){return await ce({client:this.client,storage:this.storage,ecosystem:this.ecosystem,profileToUnlink:e})}async getProfiles(){return le({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}function Oe(n,e){throw new Error(`Invalid param: ${n}`)}export{De as InAppWebConnector};
